#!/bin/bash

# create files

declare -A FILES=(
  [file-xs.txt]=100
  [file-s.txt]=10000
  [file-m.txt]=1000000
  [file-lg.txt]=100000000
)

for key in "${!FILES[@]}"; do
  openssl rand -out $key ${FILES[$key]}
done

# cipher algorithms

ALGOS=("des-cbc;6789098765432121;6789098765431221" 
"des-ede3;6789098765432121;6789098765431221" 
"rc4;6789098765432121"
"aes-128-cbc;12345678909876543212345678909876;12345432123456789786543823476234"
"aes-192-cbc;"
"aes-256-cbc;"
"chacha20;"
)

echo "#### CIPHER PHASE"

IFS=';'

for (( i=0; i < 7; i++)); do 
  algo=${ALGOS[$i]}
  read -ra tokens <<< "$algo"
  tokensLen=${#tokens[@]}
  # block algorithm
  if [[ $tokensLen == 3 ]] ; then
    for key in "${!FILES[@]}"; do
       echo "#### CIPHER TIME TEST ON ${tokens[0]} ####"	
       time openssl enc -e -in $key -out c$key -K ${tokens[1]} -iv ${tokens[2]} -${tokens[0]} 
       openssl speed ${tokens[0]}
     #$opnstr
    done
  fi
done

echo "#### DECIPHER PHASE"

IFS=';'

for (( i=0; i < 7; i++)); do 
  algo=${ALGOS[$i]}
  read -ra tokens <<< "$algo"
  tokensLen=${#tokens[@]}
  # block algorithm
  if [[ $tokensLen == 3 ]] ; then
    for key in "${!FILES[@]}"; do
       echo "#### DECIPHER TIME TEST ON ${tokens[0]} ####"	
       time openssl enc -d -in c$key -out $key -K ${tokens[1]} -iv ${tokens[2]} -${tokens[0]} 
       openssl speed ${tokens[0]}
     #$opnstr
    done
  fi
done


# remove files

for key in "${!FILES[@]}"; do
  rm $key 
  rm "c$key"
done
